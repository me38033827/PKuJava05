public class Solution {
    List<List<Integer>> ths = new ArrayList<List<Integer>>();
    public List<List<Integer>> threeSum(int[] nums) {
//         Arrays.sort(nums);
//         for(int i=0;i<nums.length;i++){
//             for(int j=1;j<nums.length;j++){
//                 for(int k=2;k<nums.length;k++){
//                     if(nums[i]+nums[j]+nums[k]==0){
//                         continue;
                        
//                     }
//                 }
//             }
//         }
      
//     } //return int[] a={nums[i],nums[j],nums[k]};
// }

if (nums == null || nums.length < 3) 

    return ths;  
          
        Arrays.sort(nums);  
          
        int len = nums.length;  
        for (int i = 0; i < len-2; i++) {  
            if (i > 0 && nums[i] == nums[i-1]) continue;  
            find(nums, i+1, len-1, nums[i]); //寻找两个数与num[i]的和为0  
        }  
          
        return ths;  
    }  
      
    public void find(int[] nums, int begin, int end, int target) {  
        int l = begin, r = end;  
        while (l < r) {  
            if (nums[l] + nums[r] + target == 0) {  
                List<Integer> ans = new ArrayList<Integer>();  
                ans.add(target);  
                ans.add(nums[l]);  
                ans.add(nums[r]);  
                ths.add(ans); //放入结果集中  
                while (l < r && nums[l] == nums[l+1]) l++;  
                while (l < r && nums[r] == nums[r-1]) r--;  
                l++;  
                r--;  
            } else if (nums[l] + nums[r] + target < 0) {  
                l++;  
            } else {  
                r--;  
            }  
        }  
    }  
}